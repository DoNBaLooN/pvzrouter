#!/bin/sh

set -e

REPO_RAW="https://raw.githubusercontent.com/DoNBaLooN/pvzrouter/main"
WWW_DIR="/www"
CGI_DIR="$WWW_DIR/cgi-bin"
CONFIG_FILE="/etc/config/wifi_auth"
CRON_FILE="/etc/crontabs/root"
SESS_FILE="/tmp/active_sessions.txt"

need_root() {
    if [ "$(id -u)" != "0" ]; then
        echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –æ—Ç –∏–º–µ–Ω–∏ root." >&2
        exit 1
    fi
}

ensure_tool() {
    tool="$1"
    if ! command -v "$tool" >/dev/null 2>&1; then
        echo "‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ç–∏–ª–∏—Ç–∞ '$tool'. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ—ë –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É." >&2
        exit 1
    fi
}

download() {
    url="$1"
    dest="$2"

    if command -v wget >/dev/null 2>&1; then
        if wget -qO "$dest" "$url"; then
            return 0
        fi
        wget --no-check-certificate -qO "$dest" "$url"
        return
    fi

    if command -v curl >/dev/null 2>&1; then
        curl -fsSL "$url" -o "$dest"
        return
    fi

    if command -v uclient-fetch >/dev/null 2>&1; then
        if uclient-fetch -q -O "$dest" "$url"; then
            return 0
        fi
        uclient-fetch --no-check-certificate -q -O "$dest" "$url"
        return
    fi

    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ (wget/curl/uclient-fetch)." >&2
    exit 1
}

setup_directories() {
    echo "üìÅ –°–æ–∑–¥–∞—é –∫–∞—Ç–∞–ª–æ–≥–∏..."
    mkdir -p "$WWW_DIR" "$CGI_DIR"
}

install_www_files() {
    echo "‚¨áÔ∏è  –ó–∞–≥—Ä—É–∂–∞—é HTML-—Ñ–∞–π–ª—ã..."
    download "$REPO_RAW/www/index.html" "$WWW_DIR/index.html"
    download "$REPO_RAW/www/success.html" "$WWW_DIR/success.html"
    download "$REPO_RAW/www/admin.html" "$WWW_DIR/admin.html"
}

install_cgi_files() {
    echo "‚¨áÔ∏è  –ó–∞–≥—Ä—É–∂–∞—é CGI-—Å–∫—Ä–∏–ø—Ç—ã..."
    for file in \
        admin_panel.sh \
        clear_sessions.sh \
        restart_portal.sh \
        session_check.sh \
        toggle_protection.sh \
        update_code.sh \
        wifi_auth.sh
    do
        download "$REPO_RAW/www/cgi-bin/$file" "$CGI_DIR/$file"
    done

    chmod +x "$WWW_DIR/admin.html" "$CGI_DIR"/*.sh
}

install_config() {
    if [ ! -f "$CONFIG_FILE" ]; then
        echo "üõ†Ô∏è  –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é wifi_auth..."
        mkdir -p "$(dirname "$CONFIG_FILE")"
        download "$REPO_RAW/etc/config/wifi_auth" "$CONFIG_FILE"
    else
        echo "‚ÑπÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è wifi_auth —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî –æ—Å—Ç–∞–≤–ª—è—é –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π."
    fi
}

prepare_runtime() {
    echo "üóÇÔ∏è  –ì–æ—Ç–æ–≤–ª—é —Ä–∞–±–æ—á–∏–µ —Ñ–∞–π–ª—ã..."
    touch "$SESS_FILE"
    chmod 644 "$SESS_FILE"
}

setup_cron() {
    echo "‚è∞ –û–±–Ω–æ–≤–ª—è—é cron..."
    touch "$CRON_FILE"
    if ! grep -q "session_check.sh" "$CRON_FILE"; then
        echo "*/5 * * * * /www/cgi-bin/session_check.sh >/dev/null 2>&1" >> "$CRON_FILE"
        /etc/init.d/cron restart >/dev/null 2>&1 || true
    fi
}

ensure_uhttpd_interpreter() {
    echo "üåê –ü—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–¥–µ—Ä–∂–∫—É .sh –≤ uhttpd..."
    if ! uci get uhttpd.main.interpreter 2>/dev/null | grep -q "/bin/sh"; then
        echo "‚ûï –î–æ–±–∞–≤–ª—è—é –æ–±—Ä–∞–±–æ—Ç–∫—É .sh –≤ uhttpd..."
        uci add_list uhttpd.main.interpreter='.sh=/bin/sh'
        uci commit uhttpd
    else
        echo "‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ .sh —É–∂–µ –≤–∫–ª—é—á–µ–Ω–∞."
    fi
}

restart_services() {
    echo "üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é —Å–ª—É–∂–±—ã..."
    if [ -x /etc/init.d/uhttpd ]; then
        /etc/init.d/uhttpd restart >/dev/null 2>&1 || true
    fi
    if [ -x /etc/init.d/nodogsplash ]; then
        /etc/init.d/nodogsplash restart >/dev/null 2>&1 || true
    fi
}

main() {
    need_root
    ensure_tool uci
    setup_directories
    install_www_files
    install_cgi_files
    install_config
    prepare_runtime
    setup_cron
    ensure_uhttpd_interpreter
    restart_services
    echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–æ—Ä—Ç–∞–ª –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://<router_ip>/"
}

main "$@"
